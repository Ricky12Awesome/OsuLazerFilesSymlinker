name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

  workflow_dispatch: 
    
env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  PROJECT_FILE: "OsuLazerFilesSymlinker.csproj"

jobs:
  artifact:
    name: Artifact for ${{ matrix.job.os-name }}
    runs-on: ${{ matrix.job.os }}
    strategy:
      matrix:
        job:
          - os: ubuntu-latest
            os-name: Linux
            rid: linux-x64
          - os: windows-latest
            os-name: Windows
            rid: win-x64
          - os: macos-latest
            os-name: MacOS x64
            rid: osx-x64
          - os: macos-latest
            os-name: MacOS ARM
            rid: osx-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Set Version
#        if: startsWith(github.ref, 'refs/tags/v') # Ignore this job if I do manual build for testing
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Restore dependencies
        run: dotnet restore ${{ env.PROJECT_FILE }}

      - name: Build and Publish for ${{ matrix.job.rid }}
        shell: bash
        run: |
          dotnet publish ${{ env.PROJECT_FILE }} \
            -c Release \
            -r ${{ matrix.job.rid }} \
            -o build/${{ matrix.job.rid }} \
            /p:PublishAot=true \
            /p:PublishSingleFile=true \
            /p:Version=${{ steps.get_version.outputs.VERSION }} # Pass version
            # /p:IncludeNativeLibrariesForSelfExtract=true # Often not needed for AOT

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.job.rid }}
          path: build/${{ matrix.job.rid }}/*

  create-release:
    runs-on: ubuntu-latest
    needs: artifact
    if: startsWith(github.ref, 'refs/tags/v') # Ignore this job if I do manual build for testing
    steps:
      - name: Get tag version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: build-win-x64
          path: artifacts/win-x64

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: build-linux-x64
          path: artifacts/linux-x64

      - name: Download macOS x64 artifact
        uses: actions/download-artifact@v4
        with:
          name: build-osx-x64
          path: artifacts/osx-x64
      
      # Uncomment if you enabled osx-arm64 in the matrix
      - name: Download macOS arm64 artifact
        uses: actions/download-artifact@v4
        with:
          name: build-osx-arm64
          path: artifacts/osx-arm64

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: |
            artifacts/win-x64/*
            artifacts/linux-x64/*
            artifacts/osx-x64/*
            # artifacts/osx-arm64/* # Uncomment if you enabled osx-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}